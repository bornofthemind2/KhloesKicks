<h1>Edit Product</h1>

<% if (error) { %>
  <div class="alert error"><%= error %></div>
<% } %>
<% if (success) { %>
  <div class="alert success"><%= success %></div>
<% } %>

<form method="post" action="/products/<%= product.id %>/edit" class="form">
  <label>Brand *</label>
  <select name="brand" required>
    <option value="">Select brand...</option>
    <option value="Nike" <%= product.brand === 'Nike' ? 'selected' : '' %>>Nike</option>
    <option value="Adidas" <%= product.brand === 'Adidas' ? 'selected' : '' %>>Adidas</option>
    <option value="Reebok" <%= product.brand === 'Reebok' ? 'selected' : '' %>>Reebok</option>
    <option value="New Balance" <%= product.brand === 'New Balance' ? 'selected' : '' %>>New Balance</option>
  </select>

  <label>Product Name *</label>
  <input type="text" name="name" value="<%= product.name %>" required />

  <label>SKU</label>
  <input type="text" name="sku" value="<%= product.sku || '' %>" />

  <label>Size</label>
  <input type="text" name="size" value="<%= product.size || '' %>" placeholder="e.g., 10, 10.5, M, L" />

  <label>Description</label>
  <textarea name="description" rows="4"><%= product.description || '' %></textarea>

  <label>Primary Image URL</label>
  <input type="url" name="image_url" value="<%= product.image_url || '' %>" placeholder="https://example.com/image.jpg" />
  <p style="font-size: 12px; color: #666; margin-top: 4px;">This is the fallback/primary image. Add additional images below.</p>
  
  <% if (product.image_url) { %>
    <div style="margin: 10px 0;">
      <img src="<%= product.image_url %>" alt="Product preview" style="max-width: 200px; max-height: 200px; border: 1px solid #ddd; border-radius: 4px; padding: 5px;" />
    </div>
  <% } %>

  <div class="images-section">
    <h3>Additional Product Images</h3>
    <p style="font-size: 13px; color: #666; margin-bottom: 15px;">Add multiple images to create a product gallery</p>
    
    <div id="imagesList" class="images-list">
      <% if (images && images.length > 0) { %>
        <% images.forEach(img => { %>
          <div class="image-item" data-image-id="<%= img.id %>">
            <img src="<%= img.image_url %>" alt="Product image" />
            <div class="image-url"><%= img.image_url %></div>
            <button type="button" class="btn-delete-image" onclick="deleteImage(<%= img.id %>)">‚ùå Delete</button>
          </div>
        <% }) %>
      <% } else { %>
        <p class="no-images">No additional images yet. Add some below!</p>
      <% } %>
    </div>
    
    <div class="add-image-form">
      <input type="url" id="newImageUrl" placeholder="https://example.com/image2.jpg" />
      <button type="button" class="btn" onclick="addImage()">‚ûï Add Image</button>
    </div>
  </div>

  <label>Highest Market Price ($)</label>
  <input type="number" name="highest_market_price" value="<%= product.highest_market_price || 0 %>" min="0" step="1" />

  <label>Buy It Now Price ($) üõí</label>
  <input type="number" name="buy_it_now_price" value="<%= product.buy_it_now_price || 0 %>" min="0" step="1" placeholder="0 = disabled" />
  <p style="font-size: 12px; color: #666; margin-top: 4px;">Set a price to allow instant purchase. Leave at 0 to disable. Accepts Card, PayPal, Venmo, Apple Pay.</p>

  <div style="display: flex; gap: 10px; margin-top: 20px;">
    <button class="btn primary" type="submit">Update Product</button>
    <a href="/products" class="btn">Cancel</a>
  </div>
</form>

<style>
.form {
  max-width: 600px;
}
.form label {
  display: block;
  margin-top: 15px;
  margin-bottom: 5px;
  font-weight: 600;
}
.form input,
.form select,
.form textarea {
  width: 100%;
  padding: 8px;
  border: 1px solid #ddd;
  border-radius: 4px;
  font-size: 14px;
}
.form textarea {
  font-family: inherit;
  resize: vertical;
}
.alert {
  padding: 12px;
  margin-bottom: 20px;
  border-radius: 4px;
}
.alert.error {
  background-color: #fee;
  color: #c00;
  border: 1px solid #fcc;
}
.alert.success {
  background-color: #efe;
  color: #060;
  border: 1px solid #cfc;
}
.images-section {
  margin-top: 30px;
  padding: 20px;
  border: 2px dashed #ddd;
  border-radius: 8px;
  background: #f9fafb;
}
.images-section h3 {
  margin-top: 0;
  font-size: 1.2rem;
}
.images-list {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
  gap: 15px;
  margin-bottom: 20px;
}
.image-item {
  background: white;
  border: 1px solid #ddd;
  border-radius: 8px;
  padding: 10px;
  text-align: center;
  position: relative;
}
.image-item img {
  width: 100%;
  height: 150px;
  object-fit: cover;
  border-radius: 4px;
  margin-bottom: 10px;
}
.image-url {
  font-size: 11px;
  color: #666;
  word-break: break-all;
  margin-bottom: 10px;
  max-height: 40px;
  overflow: hidden;
  text-overflow: ellipsis;
}
.btn-delete-image {
  background: #ef4444;
  color: white;
  border: none;
  padding: 6px 12px;
  border-radius: 4px;
  cursor: pointer;
  font-size: 12px;
  transition: background 0.2s;
}
.btn-delete-image:hover {
  background: #dc2626;
}
.add-image-form {
  display: flex;
  gap: 10px;
  align-items: center;
}
.add-image-form input {
  flex: 1;
}
.no-images {
  color: #999;
  text-align: center;
  padding: 20px;
  font-style: italic;
}
</style>

<script>
const productId = <%= product.id %>;

async function addImage() {
  const imageUrl = document.getElementById('newImageUrl').value.trim();
  
  if (!imageUrl) {
    alert('Please enter an image URL');
    return;
  }
  
  try {
    const response = await fetch(`/api/products/${productId}/images`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ image_url: imageUrl })
    });
    
    const data = await response.json();
    
    if (data.success) {
      // Reload the page to show the new image
      window.location.reload();
    } else {
      alert('Error: ' + (data.error || 'Failed to add image'));
    }
  } catch (e) {
    alert('Failed to add image: ' + e.message);
  }
}

async function deleteImage(imageId) {
  if (!confirm('Are you sure you want to delete this image?')) {
    return;
  }
  
  try {
    const response = await fetch(`/api/products/${productId}/images/${imageId}`, {
      method: 'DELETE'
    });
    
    const data = await response.json();
    
    if (data.success) {
      // Remove the image from the DOM
      const imageItem = document.querySelector(`[data-image-id="${imageId}"]`);
      if (imageItem) {
        imageItem.remove();
      }
      
      // Check if there are no images left
      const imagesList = document.getElementById('imagesList');
      if (imagesList.querySelectorAll('.image-item').length === 0) {
        imagesList.innerHTML = '<p class="no-images">No additional images yet. Add some below!</p>';
      }
    } else {
      alert('Error: ' + (data.error || 'Failed to delete image'));
    }
  } catch (e) {
    alert('Failed to delete image: ' + e.message);
  }
}
</script>
